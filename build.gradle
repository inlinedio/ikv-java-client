plugins {
    id 'java-library'
    // See: https://github.com/melix/jmh-gradle-plugin
    id "me.champeau.jmh" version "0.7.2"
    id 'com.google.protobuf' version '0.9.1'
    id "com.diffplug.spotless" version "6.23.3"
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

version = '0.0.1'
group = 'io.inlined'

repositories {
    // The google mirror is less flaky than mavenCentral()
    maven { url "https://maven-central.storage-download.googleapis.com/maven2/" }

    // for kafka proto ser-deserializer
    maven { url "https://packages.confluent.io/maven/" }

    mavenCentral()
}

def grpcVersion = '1.56.0'
def protobufVersion = '3.22.3'
def protocVersion = protobufVersion

dependencies {
    // grpc
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-services:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation 'com.google.protobuf:protobuf-java-util:3.0.0-beta-2'

    // guava
    implementation("com.google.guava:guava:32.1.2-jre")
    // redis-client
    implementation 'redis.clients:jedis:5.0.0'

    // javax
    implementation "javax.annotation:javax.annotation-api:1.3.2"

    // AWS clients
    implementation platform('software.amazon.awssdk:bom:2.21.1')
    implementation 'software.amazon.awssdk:s3'

    // Log4j2
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.20.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.20.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.20.0'

    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
// Customizing source directories: https://stackoverflow.com/questions/66794075/how-to-specify-the-protobuf-path-using-protobuf-gradle-plugin
sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'build/generated/source/proto/main/grpc'
            srcDir 'build/generated/source/proto/main/java'
        }
    }
}

java {
    withJavadocJar()
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources') // Set the classifier for the JAR file
    from sourceSets.main.allSource // Include all source files

    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)

    // Optionally, you can exclude specific files or directories
    //Ex. //exclude 'io/inlined/clients/InlineKVWriter.java'
}

artifacts {
    archives sourcesJar
}

jar {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

shadowJar {
    archiveClassifier.set('')
    mergeServiceFiles()
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            groupId "io.inlined"
            artifactId "ikv-java-client"
            project.shadow.component(publication)
        }

        /*maven(MavenPublication) {
            groupId "io.inlined"
            artifactId "ikv-java-client"
            from components.java
        }*/
    }
}

test {
    useJUnitPlatform()
}

jmh {
    warmupIterations = 1
    iterations = 1
    fork = 1
    threads = 1
}

spotless {
    java {
        targetExclude("build/generated/source/**/*.java")
        importOrder()
        removeUnusedImports()
        cleanthat()
        googleJavaFormat()
        indentWithSpaces(4)
    }
}

build.dependsOn 'spotlessApply'
build.dependsOn 'shadowJar'
publishShadowPublicationToMavenLocal.dependsOn 'jar'
